{"version":3,"sources":["webpack:///webpack/bootstrap 07dfef318712deac3326","webpack:///./webapp/scripts/sample/sample.entry.ts","webpack:///./webapp/scripts/sample/sample.html"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;AAEA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC7DgC;AAChC,IAAI,MAAM,GAAG,QAAQ,CAAC,cAAc,CAAC,MAAM,CAAY;AAMvD,CAAC;;;;YACG,MAAM,CAAC,SAAS,GAAG,oDAAI;YAEnB,KAAK,GAAG,IAAI,KAAK,EAAE,CAAC;YACxB,KAAK,CAAC,GAAG,EAAE,CAAC;;;;CA+Gf,CAAC,EAAE;;;;;;;AC1HJ,u+B","file":"sample.bundled.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 07dfef318712deac3326","import html from './sample.html'\r\nvar mainEl = document.getElementById('main') as Element\r\n\r\ndeclare class Hello {\r\n    say():void\r\n}\r\n\r\n(async function () {   \r\n    mainEl.innerHTML = html\r\n\r\n    var hello = new Hello();\r\n    hello.say();\r\n\r\n    // var connectionForm = document.getElementById(\"connectionForm\")\r\n    // var connectionUrl = document.getElementById(\"connectionUrl\") as HTMLInputElement;\r\n    // var connectButton = document.getElementById(\"connectButton\") as HTMLButtonElement;\r\n    // var stateLabel = document.getElementById(\"stateLabel\") as HTMLElement;\r\n    // var sendMessage = document.getElementById(\"sendMessage\") as HTMLInputElement;\r\n    // var sendButton = document.getElementById(\"sendButton\") as HTMLButtonElement;\r\n    // var sendForm = document.getElementById(\"sendForm\");\r\n    // var commsLog = document.getElementById(\"commsLog\") as HTMLElement;\r\n    // var closeButton = document.getElementById(\"closeButton\") as HTMLButtonElement;\r\n    // var socket: WebSocket;\r\n    // var scheme = document.location.protocol == \"https:\" ? \"wss\" : \"ws\";\r\n    // var port = document.location.port ? (\":\" + document.location.port) : \"\";\r\n    // connectionUrl.value = scheme + \"://\" + document.location.hostname + port + \"/ws\" ;\r\n    // function updateState() {\r\n    //     function disable() {\r\n    //         sendMessage.disabled = true;\r\n    //         sendButton.disabled = true;\r\n    //         closeButton.disabled = true;\r\n    //     }\r\n    //     function enable() {\r\n    //         sendMessage.disabled = false;\r\n    //         sendButton.disabled = false;\r\n    //         closeButton.disabled = false;\r\n    //     }\r\n    //     connectionUrl.disabled = true;\r\n    //     connectButton.disabled = true;\r\n    //     if (!socket) {\r\n    //         disable();\r\n    //     } else {\r\n    //         switch (socket.readyState) {\r\n    //             case WebSocket.CLOSED:\r\n    //                 stateLabel.innerHTML = \"Closed\";\r\n    //                 disable();\r\n    //                 connectionUrl.disabled = false;\r\n    //                 connectButton.disabled = false;\r\n    //                 break;\r\n    //             case WebSocket.CLOSING:\r\n    //                 stateLabel.innerHTML = \"Closing...\";\r\n    //                 disable();\r\n    //                 break;\r\n    //             case WebSocket.CONNECTING:\r\n    //                 stateLabel.innerHTML = \"Connecting...\";\r\n    //                 disable();\r\n    //                 break;\r\n    //             case WebSocket.OPEN:\r\n    //                 stateLabel.innerHTML = \"Open\";\r\n    //                 enable();\r\n    //                 break;\r\n    //             default:\r\n    //                 stateLabel.innerHTML = \"Unknown WebSocket State: \" + htmlEscape(socket.readyState.toString());\r\n    //                 disable();\r\n    //                 break;\r\n    //         }\r\n    //     }\r\n    // }\r\n    // closeButton.onclick = function () {\r\n    //     if (!socket || socket.readyState != WebSocket.OPEN) {\r\n    //         alert(\"socket not connected\");\r\n    //     }\r\n    //     socket.close(1000, \"Closing from client\");\r\n    // }\r\n    // sendButton.onclick = function () {\r\n    //     if (!socket || socket.readyState != WebSocket.OPEN) {\r\n    //         alert(\"socket not connected\");\r\n    //     }\r\n    //     var data = sendMessage.value;\r\n    //     socket.send(data);\r\n    //     commsLog.innerHTML += '<tr>' +\r\n    //         '<td class=\"commslog-client\">Client</td>' +\r\n    //         '<td class=\"commslog-server\">Server</td>' +\r\n    //         '<td class=\"commslog-data\">' + htmlEscape(data) + '</td>'\r\n    //     '</tr>';\r\n    // }\r\n    // connectButton.onclick = function() {\r\n    //     stateLabel.innerHTML = \"Connecting\";\r\n    //     socket = new WebSocket(connectionUrl.value);\r\n    //     socket.onopen = function (event) {\r\n    //         updateState();\r\n    //         commsLog.innerHTML += '<tr>' +\r\n    //             '<td colspan=\"3\" class=\"commslog-data\">Connection opened</td>' +\r\n    //         '</tr>';\r\n    //     };\r\n    //     socket.onclose = function (event) {\r\n    //         updateState();\r\n    //         commsLog.innerHTML += '<tr>' +\r\n    //             '<td colspan=\"3\" class=\"commslog-data\">Connection closed. Code: ' + htmlEscape(event.code.toString()) + '. Reason: ' + htmlEscape(event.reason) + '</td>' +\r\n    //         '</tr>';\r\n    //     };\r\n    //     socket.onerror = updateState;\r\n    //     socket.onmessage = function (event) {\r\n    //         commsLog.innerHTML += '<tr>' +\r\n    //             '<td class=\"commslog-server\">Server</td>' +\r\n    //             '<td class=\"commslog-client\">Client</td>' +\r\n    //             '<td class=\"commslog-data\">' + htmlEscape(event.data) + '</td>'\r\n    //         '</tr>';\r\n\r\n    //         location.reload();\r\n    //     };\r\n    // };\r\n    // function htmlEscape(str: string) {\r\n    //     return str\r\n    //         .replace(/&/g, '&amp;')\r\n    //         .replace(/\"/g, '&quot;')\r\n    //         .replace(/'/g, '&#39;')\r\n    //         .replace(/</g, '&lt;')\r\n    //         .replace(/>/g, '&gt;');\r\n    // }\r\n\r\n    // connectButton.click();\r\n})()\n\n\n// WEBPACK FOOTER //\n// ./webapp/scripts/sample/sample.entry.ts","module.exports = \"<!-- <h1>WebSocket Sample Application</h1>\\r\\n    <p id=\\\"stateLabel\\\">Ready to connect...</p>\\r\\n    <div>\\r\\n        <label for=\\\"connectionUrl\\\">WebSocket Server URL:</label>\\r\\n        <input id=\\\"connectionUrl\\\" />\\r\\n        <button id=\\\"connectButton\\\" type=\\\"submit\\\">Connect</button>\\r\\n    </div>\\r\\n    <p></p>\\r\\n    <div>\\r\\n        <label for=\\\"sendMessage\\\">Message to send:</label>\\r\\n        <input id=\\\"sendMessage\\\" disabled />\\r\\n        <button id=\\\"sendButton\\\" type=\\\"submit\\\" disabled>Send</button>\\r\\n        <button id=\\\"closeButton\\\" disabled>Close Socket</button>\\r\\n    </div>\\r\\n\\r\\n    <h2>Communication Log</h2>\\r\\n    <table style=\\\"width: 800px\\\">\\r\\n        <thead>\\r\\n            <tr>\\r\\n                <td style=\\\"width: 100px\\\">From</td>\\r\\n                <td style=\\\"width: 100px\\\">To</td>\\r\\n                <td>Data</td>\\r\\n            </tr>\\r\\n        </thead>\\r\\n        <tbody id=\\\"commsLog\\\">\\r\\n        </tbody>\\r\\n    </table> -->\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./webapp/scripts/sample/sample.html\n// module id = 1\n// module chunks = 0"],"sourceRoot":""}